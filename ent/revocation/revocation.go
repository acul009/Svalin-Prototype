// Code generated by ent, DO NOT EDIT.

package revocation

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the revocation type in the database.
	Label = "revocation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRevocation holds the string denoting the revocation field in the database.
	FieldRevocation = "revocation"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldHasher holds the string denoting the hasher field in the database.
	FieldHasher = "hasher"
	// Table holds the table name of the revocation in the database.
	Table = "revocations"
)

// Columns holds all SQL columns for revocation fields.
var Columns = []string{
	FieldID,
	FieldRevocation,
	FieldHash,
	FieldHasher,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// HashValidator is a validator for the "hash" field. It is called by the builders before save.
	HashValidator func(string) error
)

// OrderOption defines the ordering options for the Revocation queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHash orders the results by the hash field.
func ByHash(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHash, opts...).ToFunc()
}

// ByHasher orders the results by the hasher field.
func ByHasher(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHasher, opts...).ToFunc()
}
